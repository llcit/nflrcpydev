# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_name', models.CharField(max_length=50L)),
                ('last_name', models.CharField(max_length=20L)),
                ('title', models.CharField(blank=True, max_length=50, null=True, choices=[('MS', 'Ms.'), ('DR', 'PhD.'), ('MR', 'Mr.')])),
                ('bio', models.TextField(blank=True)),
                ('department', models.CharField(max_length=256L, blank=True)),
                ('university', models.CharField(max_length=60L, blank=True)),
                ('address', models.CharField(max_length=128L, blank=True)),
                ('city', models.CharField(max_length=20L, blank=True)),
                ('state', models.CharField(max_length=15L, blank=True)),
                ('zipcode', models.CharField(max_length=15L, blank=True)),
                ('phone', models.CharField(max_length=40L, blank=True)),
                ('fax', models.CharField(max_length=40L, blank=True)),
                ('email', models.EmailField(max_length=75, blank=True)),
                ('url', models.URLField(blank=True)),
                ('image', models.CharField(max_length=100L, blank=True)),
                ('current_project', models.CharField(max_length=255L, null=True, blank=True)),
                ('nflrc_staff', models.BooleanField(default=False)),
                ('listing_rank', models.IntegerField(null=True, blank=True)),
                ('role', models.CharField(blank=True, max_length=30, null=True, choices=[('STAFF', 'NFLRC Staff'), ('COLLAB', 'Collaborator'), ('ADVBOARD', 'Advisory Board')])),
                ('featured', models.BooleanField(default=False)),
                ('featured_rank', models.IntegerField(default=0, help_text='higher the number, lower the rank', blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactRole',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=128)),
                ('list_rank', models.IntegerField(default=1000, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemTag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('tag', models.CharField(unique=True, max_length=180)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PersonProject',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('contact_id', models.ForeignKey(to='nflrcapp.Contact')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PersonPublication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contact_id', models.ForeignKey(to='nflrcapp.Contact')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Prodev',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=300L, blank=True)),
                ('language', models.CharField(max_length=100L, blank=True)),
                ('date', models.CharField(max_length=50L, blank=True)),
                ('pdtype', models.CharField(blank=True, max_length=30L, choices=[('conference', 'Conference'), ('online', 'Online Course'), ('institute', 'Summer Institute'), ('symposium', 'Symposium'), ('workshop', 'Workshop'), ('workshop_symposium', 'Workshop/Symposium'), ('other', 'Other')])),
                ('director', models.CharField(max_length=200L)),
                ('facilitator', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('thumbnail_desc', models.CharField(default='more...', max_length=160, null=True, blank=True)),
                ('related_publication', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('skeywords', models.TextField(blank=True)),
                ('image', models.CharField(default='icon.png', max_length=100L, verbose_name='Icon image name (jumbotron images are not specified here.)', blank=True)),
                ('featured', models.BooleanField(default=False)),
                ('featured_rank', models.IntegerField(default=0, help_text='higher the number, lower the rank', blank=True)),
                ('headline', models.BooleanField(default=False)),
                ('headline_tag', models.CharField(default='', max_length=512, null=True, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('project_number', models.CharField(max_length=10L)),
                ('title', models.CharField(max_length=150L, blank=True)),
                ('language', models.CharField(max_length=80L, blank=True)),
                ('grant_cycle', models.CharField(max_length=50L, blank=True)),
                ('status', models.CharField(max_length=30L, blank=True)),
                ('director', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('thumbnail_desc', models.CharField(default='more...', max_length=160, null=True, blank=True)),
                ('skeywords', models.TextField(blank=True)),
                ('image', models.CharField(default='icon.png', max_length=100L, verbose_name='Icon image name (jumbotron images are not specified here.)', blank=True)),
                ('featured', models.BooleanField(default=False)),
                ('featured_rank', models.IntegerField(default=0, help_text='higher the number, lower the rank', blank=True)),
                ('headline', models.BooleanField(default=False)),
                ('headline_tag', models.CharField(default='', max_length=512, null=True, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('item_number', models.CharField(help_text='Follows coding/id system in place for other publications. Example: MGnn is a Monograph with id nn.', max_length=10L)),
                ('title', models.CharField(max_length=200L)),
                ('author', models.CharField(help_text='Enter one or more authors.', max_length=100L)),
                ('description', models.TextField(help_text='A description of the resource.')),
                ('category', models.CharField(help_text='Category for this publication.', max_length=128, choices=[('CD', 'CD'), ('DVD', 'DVD'), ('Journal', 'Journal'), ('Language Teaching Material', 'Language Teaching Material'), ('Network', 'Network'), ('NFLRC Monograph', 'NFLRC Monograph'), ('PragmaticsI', 'PragmaticsI'), ('PragmaticsLL', 'PragmaticsLL'), ('Research Note', 'Research Note'), ('Videotape', 'Videotape')])),
                ('image', models.CharField(default='icon.png', help_text='Icon for this item. <br>Format = ITEM_NUMBERicon.png . Default is icon.png', max_length=100L, verbose_name='icon')),
                ('language', models.CharField(help_text='(Optional)', max_length=255L, blank=True)),
                ('year', models.CharField(max_length=12L, blank=True)),
                ('thumbnail_desc', models.CharField(default='more...', max_length=160, null=True, help_text='140 characters or less. Appears on the item blocks.', blank=True)),
                ('is_oer', models.BooleanField(default=False, help_text='Check this ON if the publication is an Open Educational Resource', verbose_name='is this an Open Educational Resource?')),
                ('url', models.CharField(help_text='(Optional) Specify the address at which the resource can be accessed.', max_length=250L, blank=True)),
                ('ext_url', models.CharField(help_text='(Optional) Specify the address at which additional information about the resource is located.', max_length=250L, blank=True)),
                ('oclc_url', models.CharField(help_text='(Optional) Specify the OCLC url if it exists.', max_length=250L, blank=True)),
                ('order_from', models.CharField(help_text='(Optional) Specify URL where item may be purchased.', max_length=250L, blank=True)),
                ('size', models.CharField(help_text='(Optional) Number of pages.', max_length=40L, blank=True)),
                ('skeywords', models.TextField(help_text='(Optional) List keywords for this item separated by commas.', blank=True)),
                ('featured', models.BooleanField(default=False, help_text='(Optional) Check this ON to force the item to display in featured lists.', verbose_name='feature this item?')),
                ('featured_rank', models.IntegerField(default=0, help_text='higher the number, lower the rank', blank=True)),
                ('hidden', models.BooleanField(default=False, help_text='Prevent this item from displaying on the site. Currently not implemented.')),
                ('isbn', models.CharField(max_length=20L, null=True, editable=False, blank=True)),
                ('price', models.FloatField(null=True, editable=False, blank=True)),
                ('headline', models.BooleanField(default=False, help_text='(Optional) Check this ON to force the item to display as headline. Currently not implemented.', editable=False)),
                ('headline_tag', models.CharField(default='', editable=False, max_length=512, blank=True, help_text='(Optional) Show tagline in headline. Currently not implemented.', null=True)),
            ],
            options={
                'ordering': ['-year', 'item_number'],
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('resource_number', models.IntegerField()),
                ('title', models.CharField(max_length=150L, blank=True)),
                ('url', models.URLField(blank=True)),
                ('site_type', models.CharField(max_length=60L, blank=True)),
                ('language', models.CharField(max_length=200L, blank=True)),
                ('language_group', models.CharField(max_length=60L, blank=True)),
                ('description', models.TextField(blank=True)),
                ('status', models.IntegerField(null=True, blank=True)),
                ('contact_email', models.CharField(max_length=60L, null=True, blank=True)),
                ('site_type1', models.CharField(max_length=60L, blank=True)),
                ('site_type2', models.CharField(max_length=60L, blank=True)),
                ('site_type3', models.CharField(max_length=60L, blank=True)),
                ('image', models.CharField(max_length=50L, blank=True)),
                ('featured', models.BooleanField(default=False)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200L)),
                ('content', models.CharField(max_length=1000L, blank=True)),
                ('languages', models.CharField(max_length=100L)),
                ('skills', models.CharField(max_length=200L, blank=True)),
                ('levels', models.CharField(max_length=100L, blank=True)),
                ('age', models.CharField(max_length=100L, blank=True)),
                ('format', models.CharField(max_length=100L, blank=True)),
                ('platforms', models.CharField(max_length=300L, blank=True)),
                ('hardwares', models.CharField(max_length=1500L, blank=True)),
                ('distributor', models.CharField(max_length=600L, blank=True)),
                ('telephone', models.CharField(max_length=100L, blank=True)),
                ('fax', models.CharField(max_length=100L, blank=True)),
                ('infoemail', models.EmailField(max_length=75, blank=True)),
                ('saleemail', models.EmailField(max_length=75, blank=True)),
                ('geneemail', models.EmailField(max_length=75, blank=True)),
                ('www', models.URLField(blank=True)),
                ('price', models.CharField(max_length=200L, blank=True)),
                ('review', models.CharField(max_length=1000L, blank=True)),
                ('featured', models.BooleanField(default=False)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StoryPage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=255, blank=True)),
                ('description', models.TextField(blank=True)),
                ('thumbnail_desc', models.CharField(default='more...', max_length=160, null=True, blank=True)),
                ('skeywords', models.TextField(blank=True)),
                ('image', models.CharField(default='icon.png', max_length=100L, verbose_name='Icon image name (jumbotron images are not specified here.)', blank=True)),
                ('featured', models.BooleanField(default=False)),
                ('featured_rank', models.IntegerField(default=0, help_text='higher the number, lower the rank', blank=True)),
                ('headline', models.BooleanField(default=False)),
                ('headline_tag', models.CharField(default='', max_length=512, null=True, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(to='contenttypes.ContentType')),
                ('item_tag', models.ForeignKey(to='nflrcapp.ItemTag')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='personpublication',
            name='publication_id',
            field=models.ForeignKey(to='nflrcapp.Publication'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='personproject',
            name='project_number',
            field=models.ForeignKey(to='nflrcapp.Project'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contact',
            name='staff_role',
            field=models.ForeignKey(blank=True, to='nflrcapp.ContactRole', null=True),
            preserve_default=True,
        ),
    ]
